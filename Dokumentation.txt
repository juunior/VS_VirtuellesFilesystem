Vorm 9.7. kleinere Besprechungen zur Ideenfindung.
Am 9.7. erste konkrete Sitzung "Wie gehen wir das Projekt an"
Stichpunkte:
- Dateien bleiben nur auf dem jeweiligen Rechner
- Shadow-Datei wird zum Bearbeiten kopiert
- Dateien werden überall angezeigt
- gleiche Dateien mit Hash prüfen
- C++ Wege 00 

11.07./12.07.
 - Thomas macht GUI
 - Diskussion Marc-Robert zentraler/dezentraler Ansatz, jeweils Vor- und Nachteile herausfiltern.
    - Robert
      - zentralisiert (Aussage Herr Esch: erlaubt)
      - Clients führen Dateien lokal
      - Server fragt bei den Clients die Daten an und führt eine Liste(Zugriffsteuerung)
      - Clients greifen über Server auf die Dateien zu (schliesst Race Conditions aus)
      - Vorgehensweise bei Dateianfragen: Dateianfrage beim Server durch den Client A; Server organisiert Datei von Client B; 
      Server sperrt Dateiressource auf Rechner B;Server übergibt Datei; Danach Datei zurück an den Server,; bei Client A sperren 
      und auf Client B transferrieren und wieder freigeben.
    - Marc
      - Dateiübertragung von Client A zu Client B. Nach erfolgrreichem Checksummenvergleich wird die Datei bei Client A gelöscht.
      Sperrbit schützt vor Mehrfachzugriffen bzw. Mehrfachanfragen. 
      - Programmierung CPP einfacher, Java allerdings Plattformunabhängiger und GUI einfacher zu prgrammiern.
    - Rücksprachen mit Prof Esch: Präsentationsinhalte nicht in Stein gemeisselt, Inhalte der Präsentation: Arbeitspakete,    
      Lösungsidee(~ansatz), Funktionaler Zusammenhang (von Komponenten).Veranstaltung dient zum Tippgeben durch Prof Esch und 
      Herr Sauer.Nicht Notenrelevant.
      
13.07. Christian legt Repo an und lädt alle ein. Jan hatte ersten Quellcode in Java - wir satteln um auf Cpp.

14.07.Zusammenfassung der Strategie:
      "Konzept: virtuelles Filesystem
      Aufbau: mehrere Clients, ein Server zusammen in einem LAN
      Freigegebene Dateien mehrerer Clients sollen logisch unter einem Dateisystem zusammengefasst dargestellt werden. 
      Der Server fragt bei den Clients an, welche Dateien in einem vordefinierten Verzeichnis liegen, sammelt diese 
      Informationen, stellt sie in Listenform zur Verfügung und verteilt diese an die Clients.
      Die Clients sind dem Server per Konfigurationsdatei per IP- oder MAC-Adresse bekannt. Die Kommunikation erfolgt über 
      Sockets.
      Die Zugriffssteuerung erfolgt über den Server.
      Browse- und Search-Befehl: [Christian und Kai]
      Bei Delete und Rename führt der Server den Befehl selbst durch, er aktualisiert die Liste und verteilt diese 
      daraufhin wieder an alle Clients, damit alle immer auf demselben aktuellen Stand arbeiten können. Sollte ein Client 
      sich noch innerhalb eines gelöschten Verzeichnisses befinden, so wird er über die Änderung informiert.
      Die GUI besteht aus einer Exploreransicht, einem Suchfeld (oder einem Suchbutton), der den darin eingetragenen Wert 
      an die Search-Funktion übergibt und Buttons zum Löschen und Umbenennen von Einträgen."

15.07. Die Erstellung der ersten Prezi wird begonnen und dient zugleich als Zusammenfassung und Strukturierung der besprochenen       
    Programmabläufe und Funktionen.
    
17.07. Präsentation  durch Robert vor Prof Esch und Herr Sauer, Feedback wurde notiert und wird hier zeitnah eingefügt.
      Link zur Präsentation:  https://prezi.com/view/g8GqP3H1RMj1Z0yya8eg/
      Kommentare zur Präsentation:
        - Schrift war zu dünn - hinten nicht lesbar
        - Sockets (C oder Java) Wenn Java vielleicht besser RMI - komfortabler zu implementieren
        - delete/rename -> add auf dem Server realisieren
        - search/browse -funktion Umsetzung -> Serverliste weist IP etc zu
           - optional P2P / Client2Client
        - Prezi?! - zu wenig Grafiken (gerade Architekturaspekte etwas Anschaulicher gestalten)
        - Zuhörer Visuell anregen - weniger Abstraktion mehr Diagramme
        - Laserpointer
        - 2 Funktionen je Client/Server - GUI angezeigt
        - Client Stecker ziehen -> Server macht Listenänderung (war damit Redundanz gemeint???)
        - Redundanz doppelte Dateien und Ordner
        - Synchronisierungsintervalle
        - Upload (Prezi.pdf +link)
        
04.09. Einigung Jan und Robert: Jan kümmert sich um den Kommunikationsaufbau via RMI; Es wird weiterhin das Repo von Christian    
      verwendet;jeder legt bitte zeitnah einen Branch an. 
      
05.09. Themen: Arbeitsgruppenbesprechung ~1h

Arbeitsteilung
-Robert,Christian,Kai:
-Logik und Methoden schreiben, weitestgehend in Eigenregie
- Robert mit Masse strukturelle Aufbauten

-Jan:
-Kommunikation via RMI
-Rücksprache mit den anderen bei Feststellungen

-Thomas:
-GUI, Suchfeld Implementieren (ähnlich Windows Explorer)


-Marc:
- Doku & Präsentation
- Projektstatements zusammenfassen und festhalten: Grundlage für die anderen
- Doku zentral im Discord

Branches fürs Projekt anlegen, Christian macht ein GitRepo auf.

6.9. Themen:
Diverse Herausforderungen mit IntelliJ und Github

8.9. Themen:
Client und zugleich Server sind doch nicht so einfach zu implementieren Besprechung mit Lösungsfindung dazu~3h
Orientierung an XML, das hierarchisch aufgebaut ist und als Referenzdatei für die Struktur verwendet werden kann.
Kai macht delete Funktion,
Christian macht rename Funktion
Säuberungsaktion auf den GitBranches


11.9. Themen:
- Sachstand Kommunikation: vieles funktioniert; aber halt leider noch nicht fehlerfrei. Race Conditions müssen noch vermieden 
  werden (Hauptbaustelle) Christian unterstützt Jan dabei.
- Sachstand Struktur: angelehnt an die XML Muster aus Roberts Musterdatei werden Files durch Semikolon getrennt und zugewiesen, 
  entsprechende Befehle sind teils geschrieben und müssen noch weiterentwickelt werden.
- Dokumentation erreicht vorraussichtlich Donnerstag Status Quo.
- Nächste Besprechung Donnerstag 21 Uhr

12.9.:
 Roberst hat die Klasse zur Erstellung von Ordnerstrukturen funktionsbereit (ohne Ausnahmebehandlungen) und hochgeladen

13.9.Themen:
 - Kai noch keinen Branch erstellt. Kai soll sich auch mit den anderen (Christian und Jan) Zusammensetzen und dort unterstützen.
 - Filewatcher implementrieren und das Programm effektiver gestalten?
 - Programm so gestalten das das Minimum erfüllt wird, oder "Verwendbar" ist- Persönliche Nutzung, folgeprojekte,...?
 - tägliche Meetings 21:00 jeweils 15minuten.
 - Marc lädt Stundenliste hoch und teilt die Links: https://docs.google.com/spreadsheets/d/1Y-NdT8_gWzaZD2NccGHoLxS7KAwDpxTK9GyOBBn9WOg/edit?usp=sharing
 - Thomas setzt sich an die GUI
 - Bitte an alle: 2 Tage vor den Meetings absagen, nichterscheinen sonst bitte nur mit triftigem Grund. 
    Hintergrund: Die gezeigte Projektbeteiligung lässt bei manchen im Team zu Wünschen übrig, wodurch die anfallende Arbeit 
    unvorteilhaft und unausgeglichen verteilt ist.- Die Besprechung am 14.9. wird unter anderem dazu genutzt, die angespannte Situation im Team zu entschärfen. Ein weitereres Thema der Besprechung ist das grundsätzlich weitere Vorgehen, sowie eine Diskussion über etwaige Konsequenzen bei Nichtbeteiligung.
    
 //Stundenzettellink; jeder darf kommentieren, der den Link hat. (Sicherheitsmaßnahme das die Tabelle nicht durch Dritte 
 //verwüstet wird.
 https://docs.google.com/spreadsheets/d/1Y-NdT8_gWzaZD2NccGHoLxS7KAwDpxTK9GyOBBn9WOg/edit?usp=sharing

14.9.17 Themen:
 - Jeder will weiter machen.
 - Strukturen sind angelegt sie muessen allerdings noch an die Kommunikation und die GUI (existent) angepasst werden
 - Nächste Besprechung morgen 21 Uhr.
 - keine XML Datei mehr als Hierarchiefile sondern TXT File - wird eventuell auch wieder revidiert.
 
15.9.17 Themen: 
- Thomas & Jan RMI in Soap 
- Christian und Kai Ordnersturktur Hierarchisch in XML.
- Robert plant, koordiniert und überwacht weiter.
- Marc beginnt mit der Prezi
- Der Link zum Stundenzettel wurde an alle gesendet; der Link oben ist nicht mehr zugänglich.

17.9. Themen:
- Präsentation so wie es ist, nicht was denkbar wäre
- Trennung durch Netzwerke ->Personenkreise
- Änderung der Präsentation
- Dienstag: Fortschritte bei Kai und Jan hochgeladen

18.9. Themen:
- Kommunikation Up/Download und jeweils funktionierende Version im Github
- GUI steht, diverse Dateien werden noch optimiert damit die Größe schrumpft
- XML Erzeuger fertig, diverse Bugs wurden gefixt, suche muss noch fertiggestellt werden
- Präsentation Stand Sonntag
- Checksumme über die XML Datei - kleiner und schneller.
- Robert testet die  XML
- Kai&Christian implementieren die Suche
